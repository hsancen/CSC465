name = "log_2(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10)) +
ggtitle("Montana Population Growth")
p13 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))
p13 + geom_line() + scale_y_continuous(limits = c(0,1.95),
breaks = seq(0,2,0.15),
minor_breaks = FALSE,
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10)) +
ggtitle("Montana Population Growth")
head(mtana)
mtana
p12 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))
p12 + geom_line() + scale_y_continuous(limits = c(0,2),
breaks = seq(0,2,0.2),
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10)) +
ggtitle("Montana Population Growth")
p12 + geom_line() + scale_y_continuous(limits = c(0,2),
breaks = seq(0,2,0.2),
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10),
minor_breaks = FALSE) +
ggtitle("Montana Population Growth")
p13 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))
p13 + geom_line() + scale_y_continuous(limits = c(0,1.95),
breaks = seq(0,2,0.15),
minor_breaks = FALSE,
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10),
minor_breaks = FALSE) +
ggtitle("Montana Population Growth")
p11 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart,2)))
p11 + geom_line() + scale_y_continuous(limits = c(0,3),
breaks = seq(0,3,1),
minor_breaks = seq(0,3,0.25),
name = "log_2(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10),
minor_breaks = FALSE) +
ggtitle("Montana Population Growth")
p12 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))
p12 + geom_line() + scale_y_continuous(limits = c(0,2),
breaks = seq(0,2,0.2),
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10),
minor_breaks = FALSE) +
ggtitle("Montana Population Growth")
p13 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))
p13 + geom_line() + scale_y_continuous(limits = c(0,1.95),
breaks = seq(0,2,0.15),
minor_breaks = FALSE,
name = "ln(Population / Starting Population 1890)") +
scale_x_continuous(limits = c(1890, 2000),
breaks = seq(1890,2000,10),
minor_breaks = FALSE) +
ggtitle("Montana Population Growth")
mess <- read.csv("datasets\\MessierData.csv", header = T)
head(mess)
str(mess)
gsub("\\.", "", colnames(mess))
str(mess)
colnames(mess) <- gsub("\\.", "", colnames(mess))
str(mess)
colnames(raw)
colnames(mess)
mess <- read.csv("datasets\\MessierData.csv", header = T)
str(mess)
colnames(mess) <- gsub("\\.", "", colnames(mess))
str(mess)
head(mess)
unique(mess$Kind)
head(mess)
unique(Constellation)
unique(mess$Constellation)
unique(mess$NGC)
unique(mess$Messier)
head(mess)
p14 <- ggplot(data = mess, aes(x = NGC, y = DistanceLY))
p14 + geom_point()
unique(mess$Messier)
unique(mess$NGC)
p14 <- ggplot(data = mess, aes(x = Messier, y = DistanceLY))
p14 + geom_point()
unique(mess$DistanceLY)
max(mess$DistanceLY)
max(as.numeric(mess$DistanceLY))
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point()
p14 <- ggplot(data = mess, aes(x = Messier, y = DistanceLY))
p14 + geom_point() + scale_y_log10()
p14 <- ggplot(data = mess, aes(x = Messier, y = DistanceLY/1000000))
p14 + geom_point() + scale_y_log10()
p14 <- ggplot(data = mess, aes(x = Messier, y = DistanceLY/1000000000))
p14 + geom_point() + scale_y_log10()
p14 <- ggplot(data = mess, aes(x = Messier, y = DistanceLY/10000000))
p14 + geom_point() + scale_y_log10()
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point()
p14 + geom_point(group = Kind)
p14 + geom_point(group = mess$Kind)
p14 + geom_point(group = mess$Kind)
p14 + geom_point(aes(group = mess$Kind))
mess$Kind
p14 + geom_point(aes(group = Kind))
p14 + geom_point(aes(color = Kind))
p14 + geom_point(aes(color = Kind, size = 4))
p14 + geom_point(aes(color = Kind), size = 4)
unique(mess$Kind)
p14 + geom_point(aes(color = Kind), size = 6)
trial = data.frame(letters=letters, numbers=runif(n=26,min=1,max=26))
trial
qplot(x=numbers, y=letters, data=trial)
qplot( x = numbers, y = reorder(letters, numbers), data = trial)
ds = read.table("gmcar_price.txt", header=T, sep='\t')
ds = read.table("datasets\\gmcar_price.txt", header=T, sep='\t')
boxplot(ds$Price ~ ds$Make)
levels(ds$Make)     # Gives us a list of strings, numbered sequentially starting at 1!
origLevels = levels(ds$Make)
newLevels = origLevels[c(6, 5, 4, 3, 2, 1)]   # Reverse them
ds$Make = factor(ds$Make, newLevels)
boxplot(ds$Price ~ ds$Make)
require("ggplot2")
library("scales")
require("data.table")
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = Kind), size = 6)
makeOrderNumeric = order(as.numeric(by(mess$DistanceLY,
mess$Kind, median)))
makeOrderNumeric
by(mess$DistanceLY, mess$Kind, median)
levels(mess$Kind)
mess$KindReordered = ordered(mess$Kind, levels(mess$Kind)[makeOrderNumeric])
levels(mess$Kind)
levels(mess$KindReordered)
p14 + geom_point(aes(color = Kind, order = KindReordered), size = 6)
mess$KindReordered
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = Kind), size = 6)
p14 + geom_point(aes(color = KindReordered), size = 6)
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 6)
p14 + geom_point(aes(color = Kind), size = 6)
p14 + geom_point(aes(color = KindReordered), size = 6)
p14 + geom_point(aes(color = Kind), size = 3)
p14 + geom_point(aes(color = KindReordered), size = 3)
p14 + geom_point(aes(color = Kind), size = 5)
p14 + geom_point(aes(color = KindReordered), size = 5)
unique(mess$Kind)
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years")
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 <- ggplot(data = mess, aes(x = KindReordered, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
Messier
Messier
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = Kind), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = Kind), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
str(mess$Messier)
transform(mess, Messier=reorder(Messier, KindReordered))
mess[order(mess$KindReordered),]
mess <- mess[order(mess$KindReordered),]
head(mess)
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
mess <- mess[order(mess$KindReordered),]
#a, b, c) plot the messier objects by distance
p14 <- ggplot(data = mess, aes(x = Messier, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
head(mess)
mess$Numbered <- seq(1,110,1)
head(mess)
mess
p14 <- ggplot(data = mess, aes(x = Numbered, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 4) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 4, alpha = 0.5) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
ggtitle("Messier Object by Distance and Kind")
scale_y_continuous(name = "log_10(Distance in light-years)") +
p14 <- ggplot(data = mess, aes(x = Numbered, y = log10(DistanceLY)))
scale_y_continuous(name = "log_10(Distance in light-years)") +
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_x_continuous(name = NULL, breaks = NULL) +
ggtitle("Messier Object by Distance and Kind")
p14 <- ggplot(data = mess, aes(x = Numbered, y = log10(DistanceLY)))
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = NULL, breaks = NULL) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "", breaks = NULL) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
scale_x_discrete(name = "", breaks = NULL, limits = c(0,110)) +
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "", breaks = NULL, limits = c(0,110)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "", breaks = NULL, limits = c(0,110)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = NULL) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank()) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank()) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank() ) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank(), expand = c(-1,1) ) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank(), expand = c(-2,2) ) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank(), expand = c(0,0) ) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(), breaks = element_blank(), expand = c(-1.1,1.1) ) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.01,1.01)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_x_discrete(name = "",labels = element_blank(),
scale_y_continuous(name = "log_10(Distance in light-years)") +
ggtitle("Messier Object by Distance and Kind")
breaks = element_blank(), expand = c(-1.05,1.05)) +
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)") +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
breaks = seq(2,8,2)) +
scale_x_discrete(name = "",labels = element_blank(),
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,2)) +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,2), limits = c(-2,8)) +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
scale_x_discrete(name = "",labels = element_blank(),
breaks = seq(2,8,2), limits = c(2,8)) +
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,2), limits = c(2,8)) +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,2), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
p14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_discrete(name = "",labels = element_blank(),
breaks = element_blank(), expand = c(-1.05,1.05)) +
ggtitle("Messier Object by Distance and Kind")
head(mess)
range(mess$ApparentMagnitude)
str(mess$ApparentMagnitude)
str(as.numeric(mess$ApparentMagnitude))
range(as.numeric(mess$ApparentMagnitude))
min(as.numeric(mess$ApparentMagnitude))
p15 <- ggplot(data = mess, aes(x = ApparentMagnitude, y = log10(DistanceLY)))
p15 + geom_point()
p15 <- ggplot(data = mess, aes(y = ApparentMagnitude, x = log10(DistanceLY)))
p15 + geom_point()
p15 <- ggplot(data = mess, aes(x = ApparentMagnitude, y = log10(DistanceLY)))
p15 + geom_point()
p15 <- ggplot(data = mess, aes(x = ApparentMagnitude, y = log10(DistanceLY)))
p15 + geom_point()
p15 + geom_point() + scale_y_reverse()
p15 + geom_point() + scale_x_reverse()
p15 + geom_point(aes(alpha = ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = ApparentMagnitude)) #+ scale_x_reverse()
p15 + geom_point(aes(alpha = ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = Negate(ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = Negate(ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = Negate(ApparentMagnitude))) + scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude) + scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude) + scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude)) + scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude)) #+ scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) #+ scale_x_reverse()
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5))
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
breaks = seq(2,8,1), limits = c(2,8),
scale_y_continuous(name = "log_10(Distance in light-years)",
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Mangnitude (larger numbers less visible)",
limits = c(1,13))
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Mangnitude (larger numbers less visible)",
limits = c(1,13))
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Mangnitude (larger numbers less visible)",
limits = c(1,13), breaks = seq(1,13,2))
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Magnitude (larger numbers represents
less visible item in sky)",
limits = c(1,13), breaks = seq(1,13,2))
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
breaks = seq(2,8,1), limits = c(2,8),
scale_y_continuous(name = "log_10(Distance in light-years)",
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Magnitude (larger number represents
less visible item in sky)",
limits = c(1,13), breaks = seq(1,13,2)) +
ggtitle("Messier Object by Distance and Apparent Magnitude")
p15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +
scale_y_continuous(name = "log_10(Distance in light-years)",
breaks = seq(2,8,1), limits = c(2,8),
minor_breaks = seq(2,8,0.5)) +
scale_x_continuous(name = "Apparent Magnitude (larger number represents
less visible item in sky)",
limits = c(1,13), breaks = seq(1,13,2)) +
ggtitle("Messier Object by Distance and Apparent Magnitude")
require("ggplot2")
library("scales")
require("data.table")
port <- read.csv(file = "datasets\\PortlandWaterLevel2003.csv", header = T)
head(port)
str(port)
port$dateTime <- paste(port$Date, port$Time, sep=" ")
head(port)
port$dateTime = strptime(port$dateTime, format="%m/%d/%Y %H:%M")
str(port)
qplot(port$dateTime, port$WL, geom="line")
port <- read.csv(file = "datasets\\PortlandWaterLevel2003.csv", header = T,
stringsAsFactors = F)
#concatenate date & time
port$dateTime <- paste(port$Date, port$Time, sep=" ")
port$dateTime = strptime(port$dateTime, format="%m/%d/%Y %H:%M")
str(port)
port$dateTime <- strptime(port$dateTime, format="%m/%d/%Y %H:%M")
str(port)
port$Date <- as.Date(port$Date, format = "%m/%d/%Y")
str(port)
port$Time <- as.Date(port$Time, format = "%H:%M")
str(port)
port <- read.csv(file = "datasets\\PortlandWaterLevel2003.csv", header = T,
stringsAsFactors = F)
#concatenate date & time
port$dateTime <- paste(port$Date, port$Time, sep=" ")
port$dateTime <- strptime(port$dateTime, format="%m/%d/%Y %H:%M")
port$Date <- as.Date(port$Date, format = "%m/%d/%Y")
port$Time <- fomrat(port$Time, format = "%H:%M")
port$Time <- format(port$Time, format = "%H:%M")
str(port)
ds = data.frame(timestamp = seq(from=as.POSIXct("2013-09-01 00:00:00"),
by="5 mins", to=as.POSIXct("2013-10-01 00:00:00")),
value = rnorm(8641,0,1))
head(ds)
require(ggplot2)
# This is how you can separate out the date and the time from a date/time field in R
ds$date = as.Date(ds$timestamp, format="%Y-%m-%d")
ds$time = format(ds$timestamp, "%H:%M")
str(ds)
lab = with(port, paste(format(port$Time, "%H"), "00", sep=":"))
port$Time
ds$time
lab = with(port, paste(format(port$Time, "%H"), "00", sep=":"))
lab = with(port, paste(format(port$Time, format = "%H"), "00", sep=":"))
lab
lab = with(ds, paste(format(ds$timestamp, "%H"), "00", sep=":"))
lab
lab = with(port, paste(format(port$Time, format = "%H"), "00", sep=":"))
lab
str(port)
p16 <- ggplot(data = port, aes(x = Time, y = Date, fill = WL))
p16 + geom_tile()
head(time)
head(port$Time)
head(port$Time,24)
head(port$Time,48)
lab = with(ds, paste(format(ds$timestamp, "%H"), "00", sep=":"))
head(lab)
p16 + geom_tile() + scale_x_discrete(breaks = seq (0,23, 1))
port$Time <- format(port$Time, format = "%H")
str(port)
port$Time <- gsub(":00","",port$Time)
str(port)
p16 <- ggplot(data = port, aes(x = Time, y = Date, fill = WL))
p16 + geom_tile() #+ scale_x_discrete(breaks = seq (0,23, 1))
p16 <- ggplot(data = port, aes(x = as.factor(Time), y = Date, fill = WL))
p16 + geom_tile() #+ scale_x_discrete(breaks = seq (0,23, 1))
levels(port$Time)
p16 <- ggplot(data = port, aes(x = factor(Time), y = Date, fill = WL))
p16 + geom_tile() #+ scale_x_discrete(breaks = seq (0,23, 1))
levels(factor(port$Time))
port$Time <- factor(port$Time)
str(port)
port$Time <- factor(port$Time, levels(port$Time)[c(1:2,13,18:24,3:12,14:17)])
levels(port$Time)
p16 <- ggplot(data = port, aes(x = Time, y = Date, fill = WL))
p16 + geom_tile() #+ scale_x_discrete(breaks = seq (0,23, 1))
p16 + geom_tile() + ggtitle("Water Level by Day and Hour in 2003")
p16 + geom_tile() + ggtitle("Water Level by Day and Hour in 2003") +
scale_x_discrete(name = "Time (in hour of day)")
weights = rep(1/10000, 10000)
weights
p17 <- ggplot(data = port, aes(x = dateTime, y = WL))
p17 <- geom_line()
p17 <- ggplot(data = port, aes(x = dateTime, y = WL))
p17 <- geom_line()
p17 <- ggplot(data = port, aes(x = dateTime, y = WL))
p17 <- geom_line()
p17 <- ggplot(data = port, aes(x = dateTime, y = WL))
p17 + geom_line()
weights = rep(1/10000, 10000)
port$weightedAverage = filter(port$WL, weights, sides=2)
weights = rep(1/72, 72)
port$weightedAverage = filter(port$WL, weights, sides=2)
p17 + geom_line() + geom_line(color = "red",
aes(x = dateTime, y = weightedAverage))
port$weightedAverage = filter(port$WL, weights, sides=2)
p17 + geom_line() + geom_line(color = "red",
aes(x = dateTime, y = weightedAverage))
p17 + geom_line() + geom_line(color = "red",
aes(x = dateTime, y = port$weightedAverage))
weights = rep(1/180, 180)
port$weightedAverage = filter(port$WL, weights, sides=2)
p17 + geom_line() + geom_line(color = "red",
aes(x = dateTime, y = port$weightedAverage))
