{
    "contents" : "#CSC465 - Homework 2\n#Author: Hugo Sancen\n#10/05/15\n\n#prep required packages\nrequire(\"ggplot2\")\nlibrary(\"scales\")\nrequire(\"data.table\")\n\n#############################\n#2. Perception Test Data\n#############################\n\n#load in data & create new columns to measure accuracy\nexp <- read.csv(\"datasets\\\\PerceptionExperiment2007-2015Fall.csv\", header = T)\nexp$AbsDelta <- abs(exp$Response - exp$TrueValue)\nexp$Delta <- exp$Response - exp$TrueValue\n\n#a) what does the overall data look like in terms of judging accuracy?\np1 <- ggplot(data = exp, aes(x = Delta))\np1 + geom_histogram(position = 'identity', binwidth = 0.05) +\n  scale_x_continuous(breaks = seq(-0.8,0.8,0.1), limits = c(-0.8,0.8),\n                     name = \"Delta (Percepted Measure - True Measure)\") +\n  ggtitle(\"Overall Perception Accuracy\")\n\n#b) what does the distribution look per method?\np2 <- ggplot(data = exp, aes(x = Test, y = Delta))\np2 + geom_boxplot(outlier.colour = NA) +\n  scale_y_continuous(name = \"Delta (Percepted Measure - True Measure)\",\n                     limits = c(-1, 1)) +\n  scale_x_discrete(name = \"Graphic Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  ggtitle(\"Perception by Graphic Type w/ Jitter\") +\n  geom_point(position = position_jitter(width =0.025), alpha = 0.075)\n  \n#c) is there an outlier in the original data?\np3 <- ggplot(data = exp, aes(y = Subject, x = Test))\np3 + geom_point(position = position_jitter(width = 0.025), alpha = 0.075)\n\n#d) which charts were generally overestimated or underestimated?\np4 <- ggplot(data = exp, aes(x = Test, y = Delta))\np4 + geom_bar(stat = \"summary\", fun.y = \"median\", position = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(name = \"Median Delta (Percepted Measure-True Measure)\") +\n  ggtitle(\"Median Delta by Test Type\")\n\n#e) compare displays 1 and 2 for subjects 56-73. any difference?\nexp2e <- exp[exp$Subject >= 56 & exp$Subject <=73,]\np5 <- ggplot(data = exp2e, aes(x = factor(Display), y = Delta))\np5 + geom_boxplot() + scale_x_discrete(name = \"Display\") +\n  scale_y_continuous(name = \"Delta (Percepted Measure-True Measure)\") +\n  ggtitle(\"Aggregate Difference of measurement Delta for Subjects 56-73\")\n\n#f) can I find something interesting about the data on my own?\n#who did the absolute worst overall?\n#need a new column to get unique subject by trial\nexp$UniqueSubject <- paste0(exp$Subject, exp$Trial)\np6 <- ggplot(data = (exp[exp$AbsDelta > 0.6,]),\n             aes(x = factor(UniqueSubject), y = AbsDelta))\np6 + geom_bar(stat = \"summary\", fun.y = \"median\", position = \"identity\") +\n  scale_y_continuous(limits = c(0, 1), breaks = seq(0,1,0.2),\n                     name = \"Median of Abs. Value of Delta for All Tests\") +\n  scale_x_discrete(name = \"Unique Subject (by Subject Number and Trial)\") +\n  ggtitle(\"Who is the worst at approximating?\n          (Unique Subject w/ Median Abs. Delta > 0.6 Shown Only)\")\n\n#############################\n#3. Intel Data\n#############################\n\n#load in data & fix date\nintel <- read.csv(file = \"datasets\\\\Intel1990-2000.csv\", header = T, \n                  stringsAsFactors = F)\nintel$Date <- as.Date(intel$Date,format = \"%m/%d/%Y\")\n\n#a) create a line graph w/ thickness representing volume\np7 <- ggplot(data = intel, aes(x = Date, y = Adj.Close))\np7 + geom_line(aes(size = Volume/1000000)) +\n  scale_y_continuous(name = \"Adj. Close ($)\") +\n  guides(size = guide_legend(title = \"Volume (in millions)\")) +\n  ggtitle(\"Intel Stock Price\")\n\n#b) make volume the color of the chart\np8 <- ggplot(data = intel, aes(x = Date, y = Adj.Close))\np8 + geom_line(aes(color = Volume/1000000), size = 3) +\n  scale_color_gradient() +\n  scale_y_continuous(name = \"Adj. Close ($)\") +\n  guides(color = guide_legend(title = \"Volume (in millions)\")) +\n  ggtitle(\"Intel Stock Price\")\n\n#c) turn the y into a log scale\np9 <- ggplot(data = intel, aes(x = Date, y = log(Adj.Close,2)))\np9 + geom_line(aes(size = Volume/1000000)) +\n  scale_y_continuous(name = \"Adj. Close ($)\") +\n  guides(size = guide_legend(title = \"Volume (in millions)\")) +\n  ggtitle(\"Intel Stock Price\")\n\n#create a new dataset w/ by years only\nintel$year <- year(intel$Date)\nintel <- as.data.table(intel)\nintelyear <- intel[i = T,\n                   j = list(ClosePrice = mean(Adj.Close),\n                            AnnualVol = sum(as.numeric(Volume))),\n                   by = year]\n\np10 <- ggplot(data = intelyear, aes(x = year, y = log(ClosePrice,2)))\np10 + geom_line(aes(size = AnnualVol/1000000000)) +\n  scale_x_continuous(breaks = seq(1990,2000,1)) +\n  scale_y_continuous(name = \"log_2 of Adj. Close\", breaks = seq(-2,6,1), \n                     limit = c(-1,6)) +\n  guides(size = guide_legend(title = \"Volume (in billions)\")) +\n  ggtitle(\"Intel Stock Price\")\n\n###############################\n#4. Montana Population dataset\n###############################\n\n#load in data\nmtana <- read.csv(\"datasets\\\\MontanaPopulationData.csv\", header = T)\n\n#a) how many times has the population doubled?\n#set the starting point\nPopStart <- mtana[mtana$Year == min(mtana$Year),\"Population\"]\np11 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart,2)))\np11 + geom_line() + scale_y_continuous(limits = c(0,3),\n                                       breaks = seq(0,3,1), \n                                       minor_breaks = seq(0,3,0.25),\n                                       name = \"log_2(Population / Starting Population 1890)\") +\n  scale_x_continuous(limits = c(1890, 2000),\n                     breaks = seq(1890,2000,10),\n                     minor_breaks = FALSE) +\n  ggtitle(\"Montana Population Growth\")\n\n#b) lets measure the percentage rate of change\np12 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))\np12 + geom_line() + scale_y_continuous(limits = c(0,2),\n                                       breaks = seq(0,2,0.2), \n                                       name = \"ln(Population / Starting Population 1890)\") +\n  scale_x_continuous(limits = c(1890, 2000),\n                     breaks = seq(1890,2000,10),\n                     minor_breaks = FALSE) +\n  ggtitle(\"Montana Population Growth\")\n\n#c) what yrs was % increase greater than 15%\np13 <- ggplot(data = mtana, aes(x = Year, y = log(Population/PopStart)))\np13 + geom_line() + scale_y_continuous(limits = c(0,1.95),\n                                       breaks = seq(0,2,0.15), \n                                       minor_breaks = FALSE,\n                                       name = \"ln(Population / Starting Population 1890)\") +\n  scale_x_continuous(limits = c(1890, 2000),\n                     breaks = seq(1890,2000,10),\n                     minor_breaks = FALSE) +\n  ggtitle(\"Montana Population Growth\")\n\n###############################\n#5. Messier dataset\n###############################\n\n#load in data\nmess <- read.csv(\"datasets\\\\MessierData.csv\", header = T)\n#cleanup column headers\ncolnames(mess) <- gsub(\"\\\\.\", \"\", colnames(mess))\n#need to order Kind by median distance\nmakeOrderNumeric = order(as.numeric(by(mess$DistanceLY,\n                                       mess$Kind, median)))\nmess$KindReordered = ordered(mess$Kind, levels(mess$Kind)[makeOrderNumeric])\n#reorder my dataframe\nmess <- mess[order(mess$KindReordered),]\nmess$Numbered <- seq(1,110,1)\n\n#a, b, c) plot the messier objects by distance\np14 <- ggplot(data = mess, aes(x = Numbered, y = log10(DistanceLY)))\np14 + geom_point(aes(color = KindReordered), size = 5, alpha = 0.75) + \n  scale_y_continuous(name = \"log_10(Distance in light-years)\",\n                     breaks = seq(2,8,1), limits = c(2,8),\n                     minor_breaks = seq(2,8,0.5)) +\n  scale_x_discrete(name = \"\",labels = element_blank(),\n                   breaks = element_blank(), expand = c(-1.05,1.05)) +\n  ggtitle(\"Messier Object by Distance and Kind\")\n\n#d) create a scatter plot of distance vs visual magnitude\np15 <- ggplot(data = mess, aes(x = ApparentMagnitude, y = log10(DistanceLY)))\np15 + geom_point(aes(alpha = -ApparentMagnitude), size = 5) +\n  scale_y_continuous(name = \"log_10(Distance in light-years)\",\n                     breaks = seq(2,8,1), limits = c(2,8),\n                     minor_breaks = seq(2,8,0.5)) +\n  scale_x_continuous(name = \"Apparent Magnitude (larger number represents\n                     less visible item in sky)\",\n                     limits = c(1,13), breaks = seq(1,13,2)) +\n  ggtitle(\"Messier Object by Distance and Apparent Magnitude\")\n\n###############################\n#5. Portland Water level data\n###############################\n\n#load in the data\nport <- read.csv(file = \"datasets\\\\PortlandWaterLevel2003.csv\", header = T,\n                 stringsAsFactors = F)\n#concatenate date & time\nport$dateTime <- paste(port$Date, port$Time, sep=\" \")\nport$dateTime <- strptime(port$dateTime, format=\"%m/%d/%Y %H:%M\")\nport$Date <- as.Date(port$Date, format = \"%m/%d/%Y\")\nport$Time <- gsub(\":00\",\"\",port$Time)\n#reorder Time levels\nport$Time <- factor(port$Time)\nport$Time <- factor(port$Time, levels(port$Time)[c(1:2,13,18:24,3:12,14:17)])\n\n\n#a) show the progression of tides over period of time\np16 <- ggplot(data = port, aes(x = Time, y = Date, fill = WL))\np16 + geom_tile() + ggtitle(\"Water Level by Day and Hour in 2003\") +\n  scale_x_discrete(name = \"Time (in hour of day)\")\n\n\n#b) plot a time series of WL\np17 <- ggplot(data = port, aes(x = dateTime, y = WL))\nweights = rep(1/180, 180)\nport$weightedAverage = filter(port$WL, weights, sides=2)\np17 + geom_line() + geom_line(color = \"red\",\n                              aes(x = dateTime, y = port$weightedAverage))\n",
    "created" : 1444087433018.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1071524335",
    "id" : "50D05E03",
    "lastKnownWriteTime" : 1445040096,
    "path" : "D:/CSC465/CSC465/hw2SancenHugo.R",
    "project_path" : "hw2SancenHugo.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}